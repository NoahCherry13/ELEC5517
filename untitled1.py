# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t-2NuNIooExVdMnlqgARWOYjahOMx0_X
"""

# tree_topo_5517.py
from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import OVSController
from mininet.link import TCLink
from mininet.cli import CLI

class Tree3Topo(Topo):
    """
    Core c1 -> Agg a1..a3 -> Edge e1..e9 -> 27 hosts (3 per edge)

    Link delays chosen to target RTTs:
      host<->edge: 10ms   (~40 ms RTT same edge)
      edge<->agg : 10ms   (~80 ms RTT same aggregation, different edges)
      agg <->core: 20ms   (~160 ms RTT different aggregations under same core)
    """

    def build(self):
        # switches
        core = self.addSwitch('c1')

        aggs = []
        for i in range(1, 4):
            aggs.append(self.addSwitch('a%s' % i))

        edges = []
        for i in range(1, 10):
            edges.append(self.addSwitch('e%s' % i))

        # link params
        de = {'delay': '10ms'}  # host-edge
        da = {'delay': '10ms'}  # edge-agg
        dc = {'delay': '20ms'}  # agg-core

        # core -> agg
        for a in aggs:
            self.addLink(core, a, cls=TCLink, **dc)

        # each agg -> 3 edges
        for i, a in enumerate(aggs):
            for j in range(3):
                e = edges[i * 3 + j]
                self.addLink(a, e, cls=TCLink, **da)

        # 3 hosts per edge, deterministic MACs
        hid = 1
        for e in edges:
            for _ in range(3):
                mac = "02:00:00:00:%02x:%02x" % (hid // 256, hid % 256)
                h = self.addHost('h%s' % hid, mac=mac)
                self.addLink(h, e, cls=TCLink, **de)
                hid += 1

def main():
    topo = Tree3Topo()
    net = Mininet(topo=topo,
                  controller=OVSController,
                  link=TCLink,
                  autoSetMacs=False,
                  autoStaticArp=True)
    net.start()
    print("*** Mininet started. Use the CLI to run tests (examples below).")
    print("*** Example pings to verify RTT tiers:")
    print("  same edge (~40ms):   h1 ping -c 5 h2")
    print("  same agg  (~80ms):   h2 ping -c 5 h5")
    print("  diff aggs (~160ms):  h2 ping -c 5 h20")
    CLI(net)
    net.stop()

if __name__ == '__main__':
    main()